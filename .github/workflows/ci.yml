name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Backend Tests
  backend-test:
    name: Backend Tests (.NET)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./ThermostatApi

      - name: Build
        run: dotnet build --no-restore --configuration Release
        working-directory: ./ThermostatApi

      - name: Run Unit Tests
        run: dotnet test --no-build --configuration Release --verbosity normal
        working-directory: ./ThermostatApi.Tests

  # Frontend Tests
  frontend-test:
    name: Frontend Tests (React + Cypress)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ./client/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./client

      - name: Lint
        run: npm run lint
        working-directory: ./client

      - name: Build
        run: npm run build
        working-directory: ./client

      - name: Setup .NET for API (needed for E2E)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Start API Server
        run: |
          cd ThermostatApi
          dotnet run --urls=http://localhost:5127 &
          sleep 10

      - name: Run Cypress E2E Tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./client
          build: npm run build
          start: npm run dev
          wait-on: "http://localhost:5173"
          wait-on-timeout: 120

      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ./client/cypress/screenshots
          if-no-files-found: ignore

      - name: Upload Cypress Videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: ./client/cypress/videos
          if-no-files-found: ignore

  # Docker Build
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: thermostat-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Frontend Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./client
          file: ./client/Dockerfile
          push: false
          tags: thermostat-client:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker Compose
        run: |
          docker compose up -d
          sleep 15
          docker compose ps
          docker compose logs
          docker compose down

  # Deploy (Optional - only on main branch)
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test, docker-build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy Placeholder
        run: |
          echo "ðŸš€ Deployment would happen here"
          echo "Add your deployment steps (Azure, AWS, GCP, etc.)"
